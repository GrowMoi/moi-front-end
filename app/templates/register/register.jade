ion-view(
  view-title="{{ 'register' | translate }}",
  hide-nav-bar="true",
  class="register-view"
)
  ion-content
    .row.form-container.form-register
      form(ng-submit='registerModel.register(registerForm)', name='registerForm', novalidate)
        .login-title
          | {{ 'register' | translate }}
        .list.list-inset
          label.item.item-input
            input(
              type='text',
              ng-model='registerModel.registerForm.username',
              required='required',
              name='username',
              placeholder="{{ 'register.username' | translate }}"
            )
            span.error-msg(ng-if='registerForm.username.$error.required && registerForm.username.$touched')
              | {{  'msgs.error.required' | translate}}
          label.item.item-input.birth_year
            span.label
             | {{ 'register.birth_year' | translate }}
            select(ng-model='registerModel.registerForm.birth_year')
              option(ng-repeat='year in registerModel.bornYears'
                ng-selected='year === registerModel.registerForm.birth_year'
                ng-value='year')
                | {{year}}

        .list.list-inset
          label.item.item-input
            input(
              type='email',
              ng-model='registerModel.registerForm.email',
              required='required',
              name='email',
              autocomplete='off',
              placeholder="{{ 'register.email' | translate }}"
            )
            span.error-msg(ng-if='registerForm.email.$error.email')
              | {{  'msgs.error.email' | translate}}
            span.error-msg(ng-if='registerForm.email.$error.required && registerForm.email.$touched')
              | {{  'msgs.error.required' | translate}}
          label.item.item-input
            input(
              type='text',
              ng-model='registerModel.registerForm.city',
              autocomplete='off',
              placeholder="{{ 'register.city' | translate }}"
            )

        .list.list-inset
          label.item.item-input
            input(
              type='text',
              ng-model='registerModel.registerForm.school',
              required='required',
              name='school',
              autocomplete='off',
              placeholder="{{ 'register.school' | translate }}"
            )
            span.error-msg(ng-if='registerForm.school.$error.school')
              | {{  'msgs.error.school' | translate}}
            span.error-msg(ng-if='registerForm.school.$error.required && registerForm.school.$touched')
              | {{  'msgs.error.required' | translate}}
          label.item.item-input
            input(
              type='text',
              ng-model='registerModel.registerForm.country',
              autocomplete='off',
              placeholder="{{ 'register.country' | translate }}"
            )
        .row.gender-options
          span.title
            | {{ 'register.gender' | translate }}
          .gender-container
            label.gender
              input(type='radio'
                    name='gender'
                    value='M'
                    ng-model='registerModel.registerForm.gender')
              .name
                | {{ 'register.male' | translate }}
            label.gender
              input(type='radio'
                    name='gender'
                    value='F'
                    ng-model='registerModel.registerForm.gender')
              .name
                | {{ 'register.female' | translate }}
          span.error-msg(ng-if='!registerModel.registerForm.gender')
            | {{  'msgs.error.gender' | translate}}
        .row
          moi-select-images(images="registerModel.images"
                            on-change="registerModel.onSelectImage(image)")
        .link-terms(ng-click="registerModel.showTerms()" )
          | {{ 'register.terms' | translate }}
        .row.button-actions
          .col.actions-register
            input(
              ng-disabled="!registerForm.$valid && !registerModel.registerForm.authorization_key",
              type='submit',
              value="{{ 'register.enter' | translate }}"
            ).button.action-button
